// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "haven_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// df_parse_sas_file
List df_parse_sas_file(Rcpp::List spec_b7dat, Rcpp::List spec_b7cat);
RcppExport SEXP haven_df_parse_sas_file(SEXP spec_b7datSEXP, SEXP spec_b7catSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type spec_b7dat(spec_b7datSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type spec_b7cat(spec_b7catSEXP);
    __result = Rcpp::wrap(df_parse_sas_file(spec_b7dat, spec_b7cat));
    return __result;
END_RCPP
}
// df_parse_sas_raw
List df_parse_sas_raw(Rcpp::List spec_b7dat, Rcpp::List spec_b7cat);
RcppExport SEXP haven_df_parse_sas_raw(SEXP spec_b7datSEXP, SEXP spec_b7catSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type spec_b7dat(spec_b7datSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type spec_b7cat(spec_b7catSEXP);
    __result = Rcpp::wrap(df_parse_sas_raw(spec_b7dat, spec_b7cat));
    return __result;
END_RCPP
}
// df_parse_dta_file
List df_parse_dta_file(Rcpp::List spec, std::string encoding);
RcppExport SEXP haven_df_parse_dta_file(SEXP specSEXP, SEXP encodingSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type spec(specSEXP);
    Rcpp::traits::input_parameter< std::string >::type encoding(encodingSEXP);
    __result = Rcpp::wrap(df_parse_dta_file(spec, encoding));
    return __result;
END_RCPP
}
// df_parse_dta_raw
List df_parse_dta_raw(Rcpp::List spec, std::string encoding);
RcppExport SEXP haven_df_parse_dta_raw(SEXP specSEXP, SEXP encodingSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type spec(specSEXP);
    Rcpp::traits::input_parameter< std::string >::type encoding(encodingSEXP);
    __result = Rcpp::wrap(df_parse_dta_raw(spec, encoding));
    return __result;
END_RCPP
}
// df_parse_sav_file
List df_parse_sav_file(Rcpp::List spec, bool user_na);
RcppExport SEXP haven_df_parse_sav_file(SEXP specSEXP, SEXP user_naSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type spec(specSEXP);
    Rcpp::traits::input_parameter< bool >::type user_na(user_naSEXP);
    __result = Rcpp::wrap(df_parse_sav_file(spec, user_na));
    return __result;
END_RCPP
}
// df_parse_sav_raw
List df_parse_sav_raw(Rcpp::List spec, bool user_na);
RcppExport SEXP haven_df_parse_sav_raw(SEXP specSEXP, SEXP user_naSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type spec(specSEXP);
    Rcpp::traits::input_parameter< bool >::type user_na(user_naSEXP);
    __result = Rcpp::wrap(df_parse_sav_raw(spec, user_na));
    return __result;
END_RCPP
}
// write_sav_
void write_sav_(List data, std::string path);
RcppExport SEXP haven_write_sav_(SEXP dataSEXP, SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    write_sav_(data, path);
    return R_NilValue;
END_RCPP
}
// write_dta_
void write_dta_(List data, std::string path);
RcppExport SEXP haven_write_dta_(SEXP dataSEXP, SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    write_dta_(data, path);
    return R_NilValue;
END_RCPP
}
